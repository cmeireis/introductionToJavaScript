Exercise 3
What happens when you run the following program? Why do we get that result?
{
  let foo = 'bar';
}

console.log(foo);

  You get an error because console.log is outside of block foo is defined in.

Exercise 4
What happens when you run the following code? Why?
const NAME = 'Victor';
console.log('Good Morning, ' + NAME);
console.log('Good Afternoon, ' + NAME);
console.log('Good Evening, ' + NAME);

NAME = 'Joe';
console.log('Good Morning, ' + NAME);
console.log('Good Afternoon, ' + NAME);
console.log('Good Evening, ' + NAME);
  const NAME is unable to be changed so it prints out Victor in first three console.log statements, and errors on the remaining three.

Exercise 5:
Take a look at this code snippet:
let foo = 'bar';
{
  let foo = 'qux';
}

console.log(foo);
  What does this program log to the console? Why?
    It will log out the string bar.  This is because the value of qux assigned to foo is in curly brackets which makes it in block scope.  
    console.log is outside of block scope so it will pick up foo value of bar.

Exercise 6
Will this program produce an error when run? Why or why not?
const FOO = 'bar';
{
  const FOO = 'qux';
}

console.log(FOO);
  I don't believe it will cause an error because console.log has valid const outside of block scope.