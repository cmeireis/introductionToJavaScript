Use the arithmetic operators to determine the individual digits of a 4-digit number like 4936
  let num = 4936
  let ones = num % 10
  
  num = (num - ones) / 10
  let tens = num % 10

  num = (num - tens) / 10
  let hundreds = num % 10

  let thousands = (num - hundreds) / 10

  Exercise 3:
    Identify the data type for each of the following values:
      'true' is a string
      false is a boolean
      1.5 is a floating number
      2 is a number
      undefined is undefined
      { foo: 'bar' } is an object

        I identified these by using typeof()

  Exercise 4:
    var foo; is a statement
    foo = 5; is an expression
    foo; is an expression
  
  Exercise 5:
    Explain why this code logs '510' instead of 15
    console.log('5' + 10);
      It is because of coersion.  The expression starts with a string which leads to the + concatinating 10, which outputs as a string 510.

  Exercise 6:
    Refactor the code from the previous exercise to use explicit coercion, so it logs 15 instead.
      console.log(Number('5') + 10);

  Exercise 7:
    Use the template literal syntax along with the expression Number('5') + 10 to log the following sentence to the console:
    The value of 5 + 10 is 15.
      let value = Number('5') + 10
      console.log(`The value of 5 + 10 is ${value}.`);

    Exercise 8:
      Will an error occur if you try to access an array element with an index that is greater than or equal to the length of the array? For example:
      var foo = ['a', 'b', 'c'];
      foo.length;  // returns 3
      foo[3];      // will this result in an error?
        No it will be undefined.

    Exercise 9:
      Create an array named names that contains a list of pet names. For instance:
        let names = [ 'asta', 'butterscotch', 'pudding', 'neptune', 'darwin' ];

  Exercise 10:
    Create an object named pets that contains a list of pet names and the type of animal.
      let pets = { asta: 'dog', butterscotch: 'cat', pudding: 'cat', neptune: 'fish', darwin: 'lizard' };
  Exercise 11:
    What value does the following expression evaluate to?
    'foo' === 'Foo'
      This evaluates to false.
  Exercise 12:
    What value does the following expression evaluate to?
    parseInt('3.1415')
      3
  Exercise 13:
    What value does the following expression evaluate to?
    '12' < '9'
      It evaluates to true due to comparing strings.  It compares characters form left to right, and 1 is less than 9.  If using number type it would evaluate to false.
  